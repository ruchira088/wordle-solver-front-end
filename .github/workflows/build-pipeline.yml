name: wordle-solver-front-end pipeline

on:
  push:
    branches:
      - "**"

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  transpile-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: yarn
          cache-dependency-path: yarn.lock

      - name: Install dependencies
        run: yarn install --frozen-lockfile

  build-and-publish-docker-image:
    runs-on: ubuntu-latest
    needs:
      - transpile-and-test

    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: yarn
          cache-dependency-path: yarn.lock

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ap-southeast-2
          role-session-name: wordle-solver-front-end-deploy
          role-to-assume: "arn:aws:iam::365562660444:role/github_iam_role"

      - name: Build and Publish Docker image
        run: ansible-playbook playbooks/build-and-publish-docker-image.yml

  deploy-to-k8s:
    runs-on: ubuntu-latest
    needs:
      - build-and-publish-docker-image

    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ap-southeast-2
          role-session-name: wordle-solver-front-end-deploy
          role-to-assume: "arn:aws:iam::365562660444:role/github_iam_role"

      - name: Deploy to K8s server
        run: ansible-playbook playbooks/k8s-deploy.yml

  send-notification:
    runs-on: ubuntu-latest
    if: always()

    permissions:
      id-token: write

    needs:
      - transpile-and-test
      - build-and-publish-docker-image
      - deploy-to-k8s

    steps:
      - name: Send Slack notification
        uses: ruchira088/slack-github-action@v1
